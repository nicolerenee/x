{{ define "prefixedid" }}

{{ $pkg := base $.Config.Package }}
{{ template "header" $ }}

// prefixMap maps prefixes to table names.
var prefixMap = map[string]string{
	{{- range $node := $.Nodes }}
		{{- if $annotation := $node.Annotations.PrefixIDPrefix }}
			"{{ $annotation.Prefix }}": {{ $node.Package }}.Table,
		{{- end }}
	{{- end }}
}

// NodeTypeFromPrefixedID maps a PrefixedID to the underlying data table.
func NodeTypeFromPrefixedID(ctx context.Context, id idx.PrefixedID) (string, error) {
	p := id.Prefix()
	if p == "" {
		return "", fmt.Errorf("prefix is missing")
	}
	typ := prefixMap[p]
	if typ == "" {
		return "", fmt.Errorf("prefix '%s' is unknown", p)
	}
	return typ, nil
}

{{ end }}
